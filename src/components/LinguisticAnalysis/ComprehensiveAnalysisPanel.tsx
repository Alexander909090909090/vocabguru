
import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Progress } from '@/components/ui/progress';
import { 
  Brain, 
  Layers, 
  Clock, 
  Volume2, 
  Network, 
  Target,
  CheckCircle,
  AlertCircle,
  Download,
  Share2
} from 'lucide-react';
import { useQuery } from '@tanstack/react-query';
import { AdvancedLinguisticProcessor } from '@/services/advancedLinguisticProcessor';
import { EnhancedMorphologicalEngine } from './EnhancedMorphologicalEngine';
import { AdvancedEtymologyModule } from './AdvancedEtymologyModule';
import { ComprehensivePhoneticAnalysis } from './ComprehensivePhoneticAnalysis';
import { toast } from 'sonner';

interface ComprehensiveAnalysisPanelProps {
  word: string;
  onAnalysisComplete?: (analysis: any) => void;
}

export const ComprehensiveAnalysisPanel: React.FC<ComprehensiveAnalysisPanelProps> = ({
  word,
  onAnalysisComplete
}) => {
  const [activeTab, setActiveTab] = useState('overview');
  const [analysisProgress, setAnalysisProgress] = useState(0);

  const { data: comprehensiveAnalysis, isLoading, error } = useQuery({
    queryKey: ['comprehensive-linguistic-analysis', word],
    queryFn: async () => {
      console.log(`Starting comprehensive analysis for: ${word}`);
      
      const result = await AdvancedLinguisticProcessor.analyzeWord({
        word,
        options: {
          includeMorphological: true,
          includeEtymology: true,
          includePhonetic: true,
          includeSemantic: true,
          includeRelationships: true,
          includeUsageContexts: true
        }
      });

      if (result.success) {
        onAnalysisComplete?.(result.analysis);
        return result;
      } else {
        throw new Error(result.error || 'Analysis failed');
      }
    },
    staleTime: 1000 * 60 * 30, // 30 minutes
    onSuccess: (data) => {
      setAnalysisProgress(100);
      toast.success(`Comprehensive analysis completed for "${word}"`);
    }
  });

  const getQualityScore = () => {
    if (!comprehensiveAnalysis?.metadata) return 0;
    return Math.round(
      (comprehensiveAnalysis.metadata.confidence_score + 
       comprehensiveAnalysis.metadata.completeness_score) / 2
    );
  };

  const getQualityColor = (score: number) => {
    if (score >= 90) return 'text-green-600';
    if (score >= 75) return 'text-blue-600';
    if (score >= 60) return 'text-yellow-600';
    return 'text-red-600';
  };

  const exportAnalysis = () => {
    if (!comprehensiveAnalysis) return;
    
    const exportData = {
      word,
      timestamp: new Date().toISOString(),
      analysis: comprehensiveAnalysis.analysis,
      metadata: comprehensiveAnalysis.metadata
    };
    
    const blob = new Blob([JSON.stringify(exportData, null, 2)], {
      type: 'application/json'
    });
    
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${word}-linguistic-analysis.json`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    toast.success('Analysis exported successfully!');
  };

  const shareAnalysis = async () => {
    if (!comprehensiveAnalysis) return;
    
    const shareData = {
      title: `Linguistic Analysis: ${word}`,
      text: `Comprehensive linguistic analysis of "${word}" - Generated by VocabGuru AI`,
      url: window.location.href
    };
    
    try {
      if (navigator.share) {
        await navigator.share(shareData);
      } else {
        await navigator.clipboard.writeText(shareData.url);
        toast.success('Analysis link copied to clipboard!');
      }
    } catch (error) {
      console.error('Error sharing:', error);
      toast.error('Unable to share analysis');
    }
  };

  if (isLoading) {
    return (
      <Card>
        <CardContent className="p-8">
          <div className="text-center space-y-4">
            <Brain className="h-16 w-16 mx-auto text-primary animate-pulse" />
            <h3 className="text-xl font-semibold">Analyzing "{word}"</h3>
            <p className="text-muted-foreground">
              Running comprehensive linguistic analysis with multiple AI models...
            </p>
            <Progress value={analysisProgress} className="w-full max-w-md mx-auto" />
            <div className="flex justify-center space-x-4 text-sm text-muted-foreground">
              <span>• Morphological decomposition</span>
              <span>• Etymology tracing</span>
              <span>• Phonetic analysis</span>
              <span>• Semantic mapping</span>
            </div>
          </div>
        </CardContent>
      </Card>
    );
  }

  if (error) {
    return (
      <Card>
        <CardContent className="p-8 text-center">
          <AlertCircle className="h-16 w-16 mx-auto text-red-500 mb-4" />
          <h3 className="text-xl font-semibold mb-2">Analysis Failed</h3>
          <p className="text-muted-foreground mb-4">
            Unable to complete comprehensive analysis for "{word}"
          </p>
          <Button onClick={() => window.location.reload()} variant="outline">
            Try Again
          </Button>
        </CardContent>
      </Card>
    );
  }

  const qualityScore = getQualityScore();

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className="space-y-6"
    >
      {/* Analysis Overview Header */}
      <Card>
        <CardHeader>
          <div className="flex items-center justify-between">
            <CardTitle className="flex items-center gap-3">
              <Brain className="h-6 w-6 text-primary" />
              <span>Comprehensive Linguistic Analysis</span>
              <Badge variant="outline" className="ml-2">
                {word}
              </Badge>
            </CardTitle>
            <div className="flex items-center gap-2">
              <Button variant="outline" size="sm" onClick={exportAnalysis}>
                <Download className="h-4 w-4 mr-2" />
                Export
              </Button>
              <Button variant="outline" size="sm" onClick={shareAnalysis}>
                <Share2 className="h-4 w-4 mr-2" />
                Share
              </Button>
            </div>
          </div>
        </CardHeader>
        <CardContent>
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-6">
              <div className="flex items-center gap-2">
                <CheckCircle className="h-5 w-5 text-green-500" />
                <span className="text-sm font-medium">Analysis Complete</span>
              </div>
              <div className="flex items-center gap-2">
                <span className="text-sm font-medium">Quality Score:</span>
                <span className={`text-lg font-bold ${getQualityColor(qualityScore)}`}>
                  {qualityScore}%
                </span>
              </div>
              {comprehensiveAnalysis?.metadata && (
                <div className="flex items-center gap-2">
                  <span className="text-sm font-medium">Processing Time:</span>
                  <span className="text-sm text-muted-foreground">
                    {comprehensiveAnalysis.metadata.processing_time_ms}ms
                  </span>
                </div>
              )}
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Analysis Tabs */}
      <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
        <TabsList className="grid w-full grid-cols-5">
          <TabsTrigger value="overview" className="flex items-center gap-2">
            <Target className="h-4 w-4" />
            Overview
          </TabsTrigger>
          <TabsTrigger value="morphology" className="flex items-center gap-2">
            <Layers className="h-4 w-4" />
            Morphology
          </TabsTrigger>
          <TabsTrigger value="etymology" className="flex items-center gap-2">
            <Clock className="h-4 w-4" />
            Etymology
          </TabsTrigger>
          <TabsTrigger value="phonetics" className="flex items-center gap-2">
            <Volume2 className="h-4 w-4" />
            Phonetics
          </TabsTrigger>
          <TabsTrigger value="semantics" className="flex items-center gap-2">
            <Network className="h-4 w-4" />
            Semantics
          </TabsTrigger>
        </TabsList>

        <TabsContent value="overview" className="space-y-6 mt-6">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            <Card>
              <CardContent className="p-6 text-center">
                <Layers className="h-8 w-8 mx-auto mb-2 text-blue-500" />
                <div className="text-2xl font-bold">
                  {comprehensiveAnalysis?.analysis?.morphological_components?.length || 0}
                </div>
                <div className="text-sm text-muted-foreground">Morphemes</div>
              </CardContent>
            </Card>
            
            <Card>
              <CardContent className="p-6 text-center">
                <Clock className="h-8 w-8 mx-auto mb-2 text-green-500" />
                <div className="text-2xl font-bold">
                  {comprehensiveAnalysis?.analysis?.etymology_chain?.historical_forms?.length || 0}
                </div>
                <div className="text-sm text-muted-foreground">Historical Forms</div>
              </CardContent>
            </Card>
            
            <Card>
              <CardContent className="p-6 text-center">
                <Volume2 className="h-8 w-8 mx-auto mb-2 text-purple-500" />
                <div className="text-2xl font-bold">
                  {comprehensiveAnalysis?.analysis?.phonetic_data?.phonemes?.length || 0}
                </div>
                <div className="text-sm text-muted-foreground">Phonemes</div>
              </CardContent>
            </Card>
            
            <Card>
              <CardContent className="p-6 text-center">
                <Network className="h-8 w-8 mx-auto mb-2 text-orange-500" />
                <div className="text-2xl font-bold">
                  {comprehensiveAnalysis?.analysis?.word_relationships?.length || 0}
                </div>
                <div className="text-sm text-muted-foreground">Related Words</div>
              </CardContent>
            </Card>
          </div>

          {/* Quick Summary */}
          <Card>
            <CardHeader>
              <CardTitle>Analysis Summary</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="prose max-w-none">
                <p className="text-muted-foreground">
                  The word "<span className="font-semibold text-foreground">{word}</span>" has been 
                  comprehensively analyzed using advanced linguistic processing. This analysis includes 
                  morphological decomposition, etymological tracing, phonetic transcription, and 
                  semantic relationship mapping.
                </p>
              </div>
              
              {comprehensiveAnalysis?.metadata && (
                <div className="grid grid-cols-2 md:grid-cols-4 gap-4 pt-4 border-t">
                  <div>
                    <div className="text-sm font-medium">Confidence</div>
                    <div className="text-lg font-bold text-blue-600">
                      {Math.round(comprehensiveAnalysis.metadata.confidence_score)}%
                    </div>
                  </div>
                  <div>
                    <div className="text-sm font-medium">Completeness</div>
                    <div className="text-lg font-bold text-green-600">
                      {Math.round(comprehensiveAnalysis.metadata.completeness_score)}%
                    </div>
                  </div>
                  <div>
                    <div className="text-sm font-medium">Models Used</div>
                    <div className="text-lg font-bold text-purple-600">
                      {comprehensiveAnalysis.metadata.models_used?.length || 0}
                    </div>
                  </div>
                  <div>
                    <div className="text-sm font-medium">Processing</div>
                    <div className="text-lg font-bold text-orange-600">
                      {comprehensiveAnalysis.metadata.processing_time_ms}ms
                    </div>
                  </div>
                </div>
              )}
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="morphology" className="mt-6">
          <EnhancedMorphologicalEngine 
            word={word}
            onAnalysisComplete={(analysis) => console.log('Morphology completed:', analysis)}
          />
        </TabsContent>

        <TabsContent value="etymology" className="mt-6">
          <AdvancedEtymologyModule 
            word={word}
            onTimelineSelect={(period) => console.log('Selected period:', period)}
          />
        </TabsContent>

        <TabsContent value="phonetics" className="mt-6">
          <ComprehensivePhoneticAnalysis 
            word={word}
            onPronunciationPlay={(ipa, region) => console.log('Play pronunciation:', ipa, region)}
          />
        </TabsContent>

        <TabsContent value="semantics" className="mt-6">
          <Card>
            <CardContent className="p-8 text-center">
              <Network className="h-16 w-16 mx-auto mb-4 text-muted-foreground" />
              <h3 className="text-xl font-semibold mb-2">Semantic Analysis</h3>
              <p className="text-muted-foreground">
                Advanced semantic relationship mapping and contextual analysis coming in Phase 3!
              </p>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </motion.div>
  );
};
